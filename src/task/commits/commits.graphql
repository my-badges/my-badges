fragment Commit on Commit {
  id
  sha: oid
  committedDate
  message
  messageBody
  additions
  deletions
  author {
    user {
      login
    }
  }
  committer {
    user {
      login
    }
  }
  repository {
    owner {
      login
    }
    name
  }
}

fragment History on Repository {
  defaultBranchRef {
    target {
      ... on Commit {
        history(first: $num, after: $cursor, author: { id: $author }) {
          totalCount
          nodes {
            ...Commit
          }
          pageInfo {
            hasNextPage
            endCursor
          }
        }
      }
    }
  }
}

query CommitsQuery($id: ID!, $author: ID!, $num: Int = 100, $cursor: String) {
  node(id: $id) {
    ...History
  }
  rateLimit {
    limit
    cost
    remaining
    resetAt
  }
}

query CommitsBatchQuery(
  $ids: [ID!]!
  $author: ID!
  $num: Int = 100
  $cursor: String
) {
  nodes(ids: $ids) {
    id
    ...History
  }
  rateLimit {
    limit
    cost
    remaining
    resetAt
  }
}
